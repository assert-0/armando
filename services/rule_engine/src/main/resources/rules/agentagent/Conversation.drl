package rules.agentagent;

import com.mindsmiths.dbAdapter.DBAdapterAPI;
import com.mindsmiths.dbAdapter.FetchResult;
import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.telegramAdapter.TelegramKeyboardAnswered;
import com.mindsmiths.dbAdapter.User;

import agents.AgentAgent;
import signals.UserIdSignal;
import signals.ActivityUsersSignal;
import signals.RatingSignal;


rule "Set AgentAgent user id"
    when
        sig: UserIdSignal() from entry-point "signals"
        agent: AgentAgent()
    then
        DBAdapterAPI.fetchUser(0, sig.getUserId());
        delete(sig);
end

rule "Send AgentAgent contact info"
    when
        res: FetchResult(requestId == 0, success == true) from entry-point "signals"
        agent: AgentAgent()
    then
        User user = res.getUsers().get(0);
        agent.sendContactInfo(user);
        agent.sendSurvey(user);
        delete(res);
end

rule "Receive user bought"
    when
        answer: TelegramKeyboardAnswered() from entry-point "signals"
        agent: AgentAgent()
    then
        insert(answer);
        DBAdapterAPI.fetchUser(1, answer.getReferenceId());
end

rule "Update user bought"
    when
        res: FetchResult(requestId == 1, success == true) from entry-point "signals"
        answer: TelegramKeyboardAnswered()
        agent: AgentAgent()
    then
        agent.handleFetchResult(res.getUsers().get(0), answer.getAnswer());
        delete(answer);
        delete(res);
end

rule "Armory submit"
    when
        event: RatingSignal() from entry-point "signals"
        agent: AgentAgent()
    then
        agent.sendMessage(event.getUser().getName() + " " + event.getUser().getSurname() 
            + " je pokazao interes. Broj mobitela: " + event.getUser().getPhoneNumber()
            + ". Zovi ga " + event.getDate());
        delete(event);
end

rule "Activity users" 
    when 
        event: ActivityUsersSignal() from entry-point "signals"
        agent: AgentAgent()
    then
        if (event.getUsers().size() > 0) agent.sendMessage(event.getSignalName() + ": " + event.getUsers());
        else agent.sendMessage(event.getSignalName() + ": Nitko nije zainteresiran");
        delete(event);
end
