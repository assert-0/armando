package rules.armando;

import java.util.Date;

import com.mindsmiths.dbAdapter.DBAdapterAPI;
import com.mindsmiths.dbAdapter.FetchResult;
import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.ruleEngine.model.Heartbeat;
import com.mindsmiths.telegramAdapter.TelegramKeyboardAnswered;
import com.mindsmiths.telegramAdapter.TelegramMultiChoiceKeyboardAnswered;

import agents.Armando;


rule "First contact"
    salience 100
    when
        initialize: Initialize() from entry-point "agent-created"
        agent: Armando()
    then
        agent.sendMessage("Hello, my name is Armando, a smart Real Estate agent!");
        DBAdapterAPI.fetchUser(agent.getUserId());
        delete(initialize);
        Log.info("[DEBUG] Agent user id: " + agent.getUserId());
end

rule "Receive user data"
    when
        res: FetchResult(success == true) from entry-point "signals"
        agent: Armando()
    then
        modify(agent) {
            setUser(res.getUsers().get(0))
        };
        agent.sendInterestQuestionare();
        delete(res);
        Log.info("[DEBUG] Agent user: " + agent.getUser() + ", Res user: " + res.getUsers().get(0));
end

rule "Re-engage costumer"
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Armando(
            lastInteractionTime before[30s] ts
        )
    then
        modify(agent) {
            setLastInteractionTime(new Date())
        };
end

rule "Process customer answer"
    when
        answer: TelegramKeyboardAnswered() from entry-point "signals"
        agent: Armando()
    then
        modify(agent) {
            setQuestions(answer.getAnswer().equals("YES") ? agent.YesQuestions : agent.NoQuestions)
        }
        agent.handleFetchResult(answer.getAnswer());
        delete(answer);
        Log.info("[DEBUG] User : " + agent.getUser());
end

rule "Receive answer"
    when
        answer: TelegramMultiChoiceKeyboardAnswered() from entry-point "signals"
        agent: Armando()
    then
        Log.info("[DEBUG] Received multiple answer: " + answer.getAnswers());
        agent.handleAnswer(answer.getAnswers());
        delete(answer);
end
