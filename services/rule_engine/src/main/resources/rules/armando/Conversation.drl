package rules.armando;

import java.util.Date;

import com.mindsmiths.dbAdapter.DBAdapterAPI;
import com.mindsmiths.dbAdapter.FetchResult;
import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.ruleEngine.model.Heartbeat;
import com.mindsmiths.telegramAdapter.TelegramKeyboardAnswered;
import com.mindsmiths.ruleEngine.util.Log;

import agents.Armando;


rule "First contact"
    salience 100
    when
        initialize: Initialize() from entry-point "agent-created"
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: Armando()
    then
        modify(agent) {
            sendMessage("Hello, my name is Armando, a smart Real Estate agent!"),
            sendInterestQuestionare(),
            setUserId(message.getText())
        }
        delete(message);
end

rule "Re-engage costumer"
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Armando(
            lastInteractionTime before[30s] ts
        )
    then
        modify(agent) {
            setLastInteractionTime(new Date()),
            sendInterestQuestionare()
        };
end

rule "Process customer answer"
    when
        answer: TelegramKeyboardAnswered() from entry-point "signals"
        agent: Armando()
    then
        modify(agent) {
            setCustomerAnswer(answer.getAnswer())
        };        
        DBAdapterAPI.fetchUser(agent.getUserId());
end

rule "Update user"
    when
        agent: Armando()
        user: FetchResult(success == true) from entry-point "signals"
    then
        modify(agent) {
            updateUserAnswer(user.getUsers().get(0), agent.getCustomerAnswer()) 
        };
        delete(user);
end