package rules.armando;

import java.util.Date;
import java.util.Arrays;

import org.apache.commons.lang.StringUtils;

import com.mindsmiths.dbAdapter.DBAdapterAPI;
import com.mindsmiths.dbAdapter.FetchResult;
import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.ruleEngine.util.Agents;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.ruleEngine.model.Heartbeat;
import com.mindsmiths.telegramAdapter.TelegramKeyboardAnswered;
import com.mindsmiths.telegramAdapter.TelegramMultiChoiceKeyboardAnswered;
import com.fasterxml.jackson.databind.node.ObjectNode;

import com.mindsmiths.armory.events.ArmoryEvent; 
import com.mindsmiths.armory.events.SubmitEvent; 
import com.mindsmiths.armory.events.UserConnectedEvent; 
import com.mindsmiths.armory.events.UserDisconnectedEvent;

import com.mindsmiths.graphMaister.GraphMaisterAPI;
import com.mindsmiths.graphMaister.GraphResult;

import agents.Armando;
import agents.AgentAgent;

import signals.RatingSignal;
import signals.StatsSignal;

import util.Question;


rule "First contact"
    salience 100
    when
        initialize: Initialize() from entry-point "agent-created"
        agent: Armando()
    then
        agent.sendMessage("Hej, moje ime je Armando i ja sam pametni agent za nekretnine!");
        DBAdapterAPI.fetchUser(agent.getUserId());
        modify(agent) {
            addConnection("armory", agent.getConnection("telegram"))
        };
        delete(initialize);
end

rule "Receive user data"
    when
        res: FetchResult(success == true) from entry-point "signals"
        agent: Armando()
    then
        modify(agent) {
            setUser(res.getUsers().get(0)),
            setLastInteractionTime(new Date())
        };
        agent.displayUI();
        agent.sendMessage(String.format("Imam super vijesti za Medveščak, do proljeća ćeš imati novi park, a samim time i vrijedniju nekretninu :) Gdje se park nalazi i kako će izgledati možeš saznati ovdje: https://8000-12c56ca9-fab4-4e91-bfc8-d9bae1ed581e.dev.mindsmiths.com/%s", agent.getConnections().get("telegram")));
        //agent.sendFirstQuestion();
        delete(res);
end

/* rule "Re-engage costumer"
    when
        Heartbeat(ts: timestamp) from entry-point "signals"
        agent: Armando(
            lastInteractionTime before[30s] ts
        )
    then
        modify(agent) {
            setLastInteractionTime(new Date())
        };
        Log.warn("Sending question again");
        agent.sendQuestion();
end */

rule "Receive single answer"
    when
        answer: TelegramKeyboardAnswered() from entry-point "signals"
        agent: Armando()
    then
        agent.handleAnswer(Arrays.asList(answer.getAnswer()));
        delete(answer);
end

rule "Receive multi answer"
    when
        answer: TelegramMultiChoiceKeyboardAnswered() from entry-point "signals"
        agent: Armando()
    then
        agent.handleAnswer(answer.getAnswers());
        delete(answer);
end

rule "User connected event"
    when 
        event: UserConnectedEvent() from entry-point "signals"
        agent: Armando()
    then
        agent.displayUI();
        delete(event);
end

rule "Armory submit"
    when
        event: SubmitEvent() from entry-point "signals"
        agent: Armando()
    then
        agent.displayUI();
        agent.handleSignalResponse(event.getData().get("submit").asText());
        delete(event);
end

rule "Stats received"
    when
        sig: StatsSignal() from entry-point "signals"
        agent: Armando()
    then
        String msg = sig.isGrowing() ? "U zadnjih 30 dana je" + sig.getFeature() + " narastao za čak " + Math.round(sig.getDifference() * 100) + "%."
                    : "U zadnjih 30 dana je" + sig.getFeature() + " pao za čak " + Math.round(sig.getDifference() * 100)+ "%.";
        agent.getHandler().addQuestion(new Question(msg + " Graf možeš vidjeti ovdje ${armoryUrl}"));
        agent.sendQuestion();
        GraphMaisterAPI.createGraphDate(1, "05/2020", "%m/%Y", sig.getStatList(), "-", sig.getFeature(), "dani", "", "png");
        agent.setArticleTitle(StringUtils.capitalize(sig.getFeature().substring(1)) + "na Maksimiru");
        agent.setArticleText(msg);
end

rule "Stats payload received"
    when
        sig: GraphResult(success == true) from entry-point "signals"
        agent: Armando()
    then
        agent.displayUI(sig.getBase64Graph());
end
