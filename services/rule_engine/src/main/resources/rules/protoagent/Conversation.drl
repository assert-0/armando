package rules.protoagent;

import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.telegramAdapter.TelegramReceivedMessage;
import com.mindsmiths.ruleEngine.model.Initialize;
import com.mindsmiths.telegramAdapter.TelegramKeyboardAnswered;
import com.mindsmiths.ruleEngine.util.Agents;


import agents.ProtoAgent;
import agents.Armando;
import agents.AgentHitl;
import agents.AgentAgent;


rule "First proto contact"
    salience 100
    when
        initialize: Initialize() from entry-point "agent-created"
        message: TelegramReceivedMessage() from entry-point "signals"
        agent: ProtoAgent()
    then
        if (message.getText().startsWith("/start ")) {
            Agents.createAgent(new Armando("telegram", agent.getConnection("telegram"), message.getText().split(" ")[1]));
        }
        else {
            agent.sendRoleAssignment();
        }
        delete(message);
end

rule "Create agent"
    when
        answer: TelegramKeyboardAnswered() from entry-point "signals"
        agent: ProtoAgent()
    then
        switch(answer.getAnswer()) {
            case "USER":
                Agents.createAgent(new Armando("telegram", agent.getConnection("telegram")));
                break;
            case "AGENT":
                Agents.createAgent(new AgentAgent("telegram", agent.getConnection("telegram")));
                break;
            case "HITL":
                Agents.createAgent(new AgentHitl("telegram", agent.getConnection("telegram")));
                break;
            default:
                throw new Exception();
        }
end